#!/bin/bash
envprefix=SN_OPTION_
snflagprefix=SN_NIX_SHELL_

shortcut() {
  export ${envprefix}"$1"="$2"
}

fetch() {
  echo $(env | grep "${envprefix}$1=" | perl -pe 'chomp')
}

getenvvar() {
  printenv "$1"
}

iterm2_set_user_var () {
  printf "\033]1337;SetUserVar=%s=%s\007" "$1" $(printf "%s" "$2" | base64 | tr -d '\n')
}

shortcut aws       ~/dev/lp/nix-setup/aws.nix
shortcut haskell   ~/dev/lp/nix-setup/haskell.nix
shortcut kafka     ~/dev/lp/nix-setup/kafka.nix
shortcut scala     ~/dev/lp/nix-setup/scala.nix
shortcut shell     ~/dev/lp/nix-setup/shell.nix
shortcut spark     ~/dev/lp/nix-setup/spark.nix
shortcut terraform ~/dev/lp/nix-setup/terraform.nix

snflag="${snflagprefix}$1"


if [[ -n $(getenvvar "${snflag}") ]]; then
  echo "Already in Nix for $1"
  exit 1
fi

derivationdir=$(fetch "$1")
if [[ -z "${derivationdir// }" ]]; then

  echo Choices:
  env | grep ${envprefix} | sort | sed -e 's/'${envprefix}'//' | sed -e 's/=/ => /' | sed -e 's/^/  /'
  echo Master here: ~/dev/oss/nixpkgs/pkgs/top-level/all-packages.nix

else
  export "${snflag}"=indeed
  export snshells="$1 ${snshells}"
  iterm2_set_user_var badgeText "${snshells}"
  nix-shell --show-trace $(cut -d "=" -f 2 <<< "$derivationdir")
fi

while read var; do unset $var; done < <(env | grep ${envprefix} | cut -d "=" -f 1)
